// CALENDAR WIDGET
function renderCalendarWidget(targetDate = new Date()) {
  const widget = document.querySelector('.calendar-widget');
  if (!widget) return;

  const year = targetDate.getFullYear();
  const month = targetDate.getMonth();
  
  const monthNames = ['–°—ñ—á–µ–Ω—å','–õ—é—Ç–∏–π','–ë–µ—Ä–µ–∑–µ–Ω—å','–ö–≤—ñ—Ç–µ–Ω—å','–¢—Ä–∞–≤–µ–Ω—å','–ß–µ—Ä–≤–µ–Ω—å','–õ–∏–ø–µ–Ω—å','–°–µ—Ä–ø–µ–Ω—å','–í–µ—Ä–µ—Å–µ–Ω—å','–ñ–æ–≤—Ç–µ–Ω—å','–õ–∏—Å—Ç–æ–ø–∞–¥','–ì—Ä—É–¥–µ–Ω—å'];
  
  // Header with navigation
  let html = `<div class="calendar-header">
    <button class="calendar-nav prev-month" aria-label="–ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –º—ñ—Å—è—Ü—å">&lt;</button>
    <div class="calendar-title">${monthNames[month]} ${year}</div>
    <button class="calendar-nav next-month" aria-label="–ù–∞—Å—Ç—É–ø–Ω–∏–π –º—ñ—Å—è—Ü—å">&gt;</button>
  </div>`;
  
  html += '<div class="calendar-weekdays">';
  const weekDays = ['–ü–Ω','–í—Ç','–°—Ä','–ß—Ç','–ü—Ç','–°–±','–ù–¥'];
  weekDays.forEach(d => html += `<div>${d}</div>`);
  html += '</div>';

  html += '<div class="calendar-grid">';
  const daysInMonth = new Date(year, month + 1, 0).getDate();
  const firstDay = (new Date(year, month, 1).getDay() + 6) % 7; // Monday=0
  for(let i=0; i<firstDay; i++) html += '<div class="calendar-cell empty"></div>';
  
  const today = new Date();
  for(let d=1; d<=daysInMonth; d++) {
    const isToday = (d === today.getDate() && month === today.getMonth() && year === today.getFullYear());
    html += `<div class="calendar-cell${isToday?' today':''}" data-day="${d}">${d}</div>`;
  }
  
  // Fill remaining cells to complete the grid
  const totalCells = firstDay + daysInMonth;
  const remainingCells = (7 - (totalCells % 7)) % 7;
  for(let i=0; i<remainingCells; i++) html += '<div class="calendar-cell empty"></div>';
  
  html += '</div>';
  widget.innerHTML = html;
  
  // Add navigation event listeners
  const prevBtn = widget.querySelector('.prev-month');
  const nextBtn = widget.querySelector('.next-month');
  
  prevBtn.addEventListener('click', () => {
    const newDate = new Date(year, month - 1, 1);
    renderCalendarWidget(newDate);
  });
  
  nextBtn.addEventListener('click', () => {
    const newDate = new Date(year, month + 1, 1);
    renderCalendarWidget(newDate);
  });
  
  // Add click handlers for days
  widget.querySelectorAll('.calendar-cell:not(.empty)').forEach(cell => {
    cell.addEventListener('click', () => {
      const day = parseInt(cell.getAttribute('data-day'));
      const clickedDate = new Date(year, month, day);
      showCalendarDayModal(clickedDate);
    });
  });
}

function showCalendarDayModal(date) {
  const modal = document.createElement('div');
  modal.className = 'calendar-modal';
  modal.style.cssText = `
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    opacity: 0;
    transition: opacity 0.3s;
  `;
  
  const content = document.createElement('div');
  content.style.cssText = `
    background: white;
    border-radius: 16px;
    padding: 24px;
    max-width: 400px;
    width: 90%;
    max-height: 80vh;
    overflow-y: auto;
    transform: scale(0.8);
    transition: transform 0.3s;
  `;
  
  const weekDays = ['–ù–µ–¥—ñ–ª—è','–ü–æ–Ω–µ–¥—ñ–ª–æ–∫','–í—ñ–≤—Ç–æ—Ä–æ–∫','–°–µ—Ä–µ–¥–∞','–ß–µ—Ç–≤–µ—Ä','–ü\'—è—Ç–Ω–∏—Ü—è','–°—É–±–æ—Ç–∞'];
  const monthNames = ['–°—ñ—á–Ω—è','–õ—é—Ç–æ–≥–æ','–ë–µ—Ä–µ–∑–Ω—è','–ö–≤—ñ—Ç–Ω—è','–¢—Ä–∞–≤–Ω—è','–ß–µ—Ä–≤–Ω—è','–õ–∏–ø–Ω—è','–°–µ—Ä–ø–Ω—è','–í–µ—Ä–µ—Å–Ω—è','–ñ–æ–≤—Ç–Ω—è','–õ–∏—Å—Ç–æ–ø–∞–¥–∞','–ì—Ä—É–¥–Ω—è'];
  
  const isToday = date.toDateString() === new Date().toDateString();
  
  content.innerHTML = `
    <div style="text-align: center; margin-bottom: 20px;">
      <div style="font-size: 2em; color: #4A90E2; margin-bottom: 10px;">üìÖ</div>
      <h2 style="margin: 0 0 10px 0; color: #333;">${weekDays[date.getDay()]}</h2>
      <div style="font-size: 1.5em; color: #666; margin-bottom: 15px;">
        ${date.getDate()} ${monthNames[date.getMonth()]} ${date.getFullYear()}
      </div>
      ${isToday ? '<div style="background: #4A90E2; color: white; padding: 8px 16px; border-radius: 20px; display: inline-block; font-size: 0.9em;">–°—å–æ–≥–æ–¥–Ω—ñ</div>' : ''}
    </div>
    <div style="background: #f8f9fa; border-radius: 8px; padding: 20px; margin-bottom: 20px;">
      <h3 style="margin: 0 0 15px 0; color: #333;">–ü–æ–¥—ñ—ó –≤ —Ç–∞–±–æ—Ä—ñ "–ó–æ—Ä—è–Ω–∏–π"</h3>
      <div style="color: #666; line-height: 1.6;">
        <p>‚Ä¢ –†–∞–Ω–∫–æ–≤–∞ –∑–∞—Ä—è–¥–∫–∞</p>
        <p>‚Ä¢ –°–Ω—ñ–¥–∞–Ω–æ–∫</p>
        <p>‚Ä¢ –ó–∞–Ω—è—Ç—Ç—è –≤ –≥—É—Ä—Ç–∫–∞—Ö</p>
        <p>‚Ä¢ –û–±—ñ–¥</p>
        <p>‚Ä¢ –°–ø–æ—Ä—Ç–∏–≤–Ω—ñ —ñ–≥—Ä–∏</p>
        <p>‚Ä¢ –ü–æ–ª—É–¥–µ–Ω–æ–∫</p>
        <p>‚Ä¢ –í–µ—á—ñ—Ä–Ω—ñ –∑–∞—Ö–æ–¥–∏</p>
        <p>‚Ä¢ –í–µ—á–µ—Ä—è</p>
        <p>‚Ä¢ –î–∏—Å–∫–æ—Ç–µ–∫–∞</p>
      </div>
    </div>
    <button onclick="this.closest('.calendar-modal').remove()" style="
      width: 100%;
      padding: 12px;
      background: #4A90E2;
      color: white;
      border: none;
      border-radius: 8px;
      font-size: 1em;
      cursor: pointer;
      transition: background 0.2s;
    " onmouseover="this.style.background='#357abd'" onmouseout="this.style.background='#4A90E2'">
      –ó–∞–∫—Ä–∏—Ç–∏
    </button>
  `;
  
  modal.appendChild(content);
  document.body.appendChild(modal);
  
  // Animate in
  setTimeout(() => {
    modal.style.opacity = '1';
    content.style.transform = 'scale(1)';
  }, 10);
  
  function closeModal() {
    modal.style.opacity = '0';
    content.style.transform = 'scale(0.8)';
    setTimeout(() => modal.remove(), 300);
  }
  
  modal.addEventListener('click', function(e) {
    if (e.target === modal) closeModal();
  });
  
  document.addEventListener('keydown', function escHandler(e) {
    if (e.key === 'Escape') {
      closeModal();
      document.removeEventListener('keydown', escHandler);
    }
  });
}

export { renderCalendarWidget }; 